<?php

define('UNITAILER_STATUS_WAIT', 0);
define('UNITAILER_STATUS_OK', 1);
define('UNITAILER_PAY_CANCELED', 2);
define('UNITAILER_PAID', 1);

/**
 * Implements hook_menu().
 */
function unitailer_menu() {
  $items = array();

  $items['admin/config/unitailer'] = array(
    'title' => t('Unitailer settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unitailer_settings_form'),
    'access callback' => array('user_access'),
    'access arguments' => array('administer site configuration'),
    'file' => 'unitailer.settings.inc'
  );

  $items['admin/config/unitailer/test'] = array(
    'title' => t('Unitailer test'),
    'page callback' => 'unitailer_test_page',
    'page arguments' => array('unitailer_settings_form'),
    'access callback' => array('user_access'),
    'access arguments' => array('administer site configuration'),
    'file' => 'unitailer.test.inc'
  );

  $items['unitailer_payment/%'] = array(
    'title' => t('Unitailer payment'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unitailer_form', 1),
    'access callback' => array('user_access'),
    'access arguments' => array('administer site configuration'),
    'file' => 'unitailer.settings.inc'
  );

  $items['unitailer_cancel/%'] = array(
    'title' => t('Unitailer cancel'),
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'unitailer_cancel',
    'page arguments' => array(1),
    'access arguments' => array('administer site configuration'),
    'file' => 'unitailer.settings.inc'
  );

  $items['unitailer_payment_success'] = array(
    'title' => t('Unitailer payment'),
    'page callback' => 'unitailer_payment_success_page',
    'page arguments' => array(),
    'access callback' => TRUE,
    'file' => 'unitailer.callback.inc'
  );

  $items['unitailer_payment_fail'] = array(
    'title' => t('Unitailer payment'),
    'page callback' => 'unitailer_payment_fail_page',
    'page arguments' => array(),
    'access callback' => TRUE,
    'file' => 'unitailer.callback.inc'
  );

  return $items;
}

/**
 * Function save payment.
 */
function unitailer_write_payment($target_uuid, $amount, $entity_id, $entity, $status = UNITAILER_STATUS_WAIT, $id = NULL) {

  $payment = array(
    'uuid' => $target_uuid,
    'amount' => number_format($amount, 2, ".", ""),
    'status' => $status,
    'entity' => $entity,
    'entity_id' => $entity_id,
  );

  $key = NULL;

  if (!empty($id)) {
    $payment['id'] = $id;
    $key = 'id';
  }

  return drupal_write_record('unitailer_payment', $payment, $key);
}

/**
 * Function returnt payment by id.
 */
function unitailer_get_payment_by_id($id) {
  $result = db_select('unitailer_payment', 'up')
    ->fields('up')
    ->condition('up.id', $id)->execute()->fetchAll();
  return $result[0];
}

/**
 * Function returnt payment by target.
 */
function unitailer_get_payment_by_target($uuid, $entity_id) {
  $result = db_select('unitailer_payment', 'up')
    ->fields('up')
    ->condition('up.uuid', $uuid)
    ->condition('up.entity_id', $entity_id)
    ->execute()->fetchAll();
  return $result[0];
}

/**
 * Implementation hook_form()
 */
function unitailer_form($form, $form_state, $payment) {
  if ($payment) {
    global $base_url;
    $Shop_IDP = variable_get('unitailer_idp', '');
    $Signature = getSignature(
      $Shop_IDP,
      $payment->id,
      $payment->amount,
      "", "", "", "", "", "", "",
      variable_get('unitailer_pass', '')
    );

    $form = array();
    $form['#action'] = "https://wpay.uniteller.ru/pay/";
    $form['Shop_IDP'] = array('#type' => 'hidden', '#value' => $Shop_IDP);
    $form['Order_IDP'] = array('#type' => 'hidden', '#value' => $payment->id);
    $form['Subtotal_P'] = array(
      '#type' => 'hidden',
      '#value' => $payment->amount
    );
    $form['Signature'] = array('#type' => 'hidden', '#value' => $Signature);
    $form['URL_RETURN_OK'] = array(
      '#type' => 'hidden',
      '#value' => $base_url . '/unitailer_payment_success'
    );
    $form['URL_RETURN_NO'] = array(
      '#type' => 'hidden',
      '#value' => $base_url . '/unitailer_payment_fail_page'
    );
    $form['submit'] = array('#type' => 'submit', '#value' => t('Buy'));
    return $form;

  }
  else {
    drupal_set_message(t('This payment not exist'));
  }
}

/**
 * Function return signature value.
 */
function getSignature($Shop_IDP, $Order_ID, $Subtotal_P, $MeanType
  , $EMoneyType, $Lifetime, $Customer_IDP, $Card_IDP
  , $IData, $PT_Code, $password) {
  $Signature = strtoupper(
    md5(
      md5($Shop_IDP) . "&" .
      md5($Order_ID) . "&" .
      md5($Subtotal_P) . "&" .
      md5($MeanType) . "&" .
      md5($EMoneyType) . "&" .
      md5($Lifetime) . "&" .
      md5($Customer_IDP) . "&" .
      md5($Card_IDP) . "&" .
      md5($IData) . "&" .
      md5($PT_Code) . "&" .
      md5($password)
    )
  );
  return $Signature;
}

/**
 * Function return settings of unitailer.
 */
function unitailer_get_settings() {
  return array(
    ''
  );
}

/**
 * Function return signature value.
 */
function unblock($Shop_ID, $Login, $Password, $Billnumber) {
  // Format=1 - data in string with delimiter ";",
  $sPostFields = "Shop_ID=" . $Shop_ID . "&Login=" . $Login
    . "&Password=" . $Password . "&Format=1&Billnumber=" . $Billnumber
    . "&S_FIELDS=Status;ApprovalCode;BillNumber";
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, "https://wpay.uniteller.ru/unblock/");
  curl_setopt($ch, CURLOPT_HEADER, 0);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($ch, CURLOPT_VERBOSE, 0);
  curl_setopt($ch, CURLOPT_TIMEOUT, 60);
  curl_setopt($ch, CURLOPT_POST, 1);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $sPostFields);
  curl_setopt($ch, CURLOPT_BINARYTRANSFER, 1);
  curl_setopt($ch, CURLINFO_HEADER_OUT, 1);
  $curl_response = curl_exec($ch);
  $curl_error = curl_error($ch);

  $data = array(); // result
  if ($curl_error) {
    // process cancel payment
  }
  else {
    // all ok
    // process data from $curl_response
    $arr = explode(";", $curl_response);
    if (count($arr) > 2) {
      $data = array(
        "Status" => $arr[0]
      ,
        "ApprovalCode" => $arr[1]
      ,
        "BillNumber" => $arr[2]
      );
    }
    else {
      // somes bad
    }
  }
  return $data;
}

/**
 * Function return book id
 */
function unitailer_get_bid($uuid) {
  $data = db_select('unitailer_payment', 'up')
    ->fields('up', array('id'))
    ->condition('up.uuid', $uuid)
    ->execute()
    ->fetchField();
  return $data;
}

/**
 * Function cancel order
 */
function unitailer_cancel($uuid) {
  $u_bid = unitailer_get_bid($uuid);
  $Shop_ID = variable_get('unitailer_idp', ''); // идентификатор точки продажи
  $Login = variable_get('unitailer_login', ''); // логин выданый в ЛК Uniteller
  $Password = variable_get('unitailer_pass', ''); // пароль выданый в ЛК Uniteller
  $order_info = unitaler_get_data($u_bid, $Shop_ID, $Login, $Password);
  $Billnumber = $order_info->billnumber; // номер платежа в системе Uniteller(12 цифр)

  // cancel payment with $Billnumber
  $data = unblock($Shop_ID, $Login, $Password, $Billnumber);

  if (!count($data)) {
    // cancel not processed
    $result = array(
      'flag' => FALSE,
      'message' => 'Ошибка. Отмена не произошла'
    );
  }
  else {
    // check status
    if ($data['Status'] == 'Status' && $data['ApprovalCode'] == 'ApprovalCode') {
      // success cancelation
      db_update('unitailer_payment')
        ->fields(array('status' => UNITAILER_PAY_CANCELED))
        ->condition('uuid', $uuid)
        ->execute();

      $result = array(
        'flag' => TRUE,
        'message' => 'Успешная отмена',
        'data' => $data
      );
    }
    else {
      // some went wrong
      $result = array(
        'flag' => FALSE,
        'message' => 'Ошибка. Отмена не произошла, что-то не так',
        'data' => $data
      );
    }
  }

  drupal_set_message($result['message'], $result['flag'] ? 'status' : 'error');
  return $result;
}

/**
 * Implements hook_views_api()
 */
function unitailer_views_api() {
  return array('api' => 3);
}

/**
 * Function return transaction data.
 */
function unitaler_get_data($Order_ID, $Shop_ID, $login, $password) {
  ini_set('soap.wsdl_cache_enabled', '0');
  ini_set('soap.wsdl_cache_ttl', '0');
  $client = new SoapClient("https://wpay.uniteller.ru/results/wsdl/",
    array(
      'trace' => 0,
      'exceptions' => 1,
    )
  );
  $result = $client->GetPaymentsResult(
    $Shop_ID
    , $login
    , $password
    , $Order_ID
    , $success = 1
    , $startmin = NULL
    , $starthour = NULL
    , $startday = NULL
    , $startmonth = NULL
    , $startyear = NULL
    , $endmin = NULL
    , $endhour = NULL
    , $endday = NULL
    , $endmonth = NULL
    , $endyear = NULL
    , $meantype = NULL
    , $paymenttype = NULL
    , $english = NULL
  );

// check transaction record and transaction summ
  if (count($result) == 1) {
    // Transaction success
    return $result[0];
  }
  return FALSE;
}

/**
 * Implementation hook_unitailer_payment().
 */
function unitailer_unitailer_payment($op, $payment, $status) {
  if ($payment->status == 0 && $op == 'success' && $payment->entity == 'test' && ($status == 'authorized' || $status == 'paid')) {
    db_update('unitailer_payment')
      ->fields(array('status' => UNITAILER_PAID))
      ->condition('uuid', $payment->uuid)
      ->execute();
  }
}