<?php
/**
 * @file
 * Module add functionality for many landings by popular flights.
 */

/**
 * Implements hook_menu().
 */
function air_landing_menu() {
  $items = array();

  $items['control/parse_air'] = array(
    'title' => 'Parsing',
    'page callback' => '__parse_air_page',
    'page arguments' => array(),
    'access callback' => TRUE,
  );

  $items['control/parse_air_settings'] = array(
    'title' => 'Parsing',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('parse_air_settings_form'),
    'access callback' => array('user_access'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Implements landing settings form.
 */
function parse_air_settings_form($form, &$form_state) {
  $form = array();

  $form['air_landing_from'] = array(
    '#type' => 'textfield',
    '#title' => t('ID From'),
    '#size' => 60,
    '#maxlength' => 128,
    '#default_value' => variable_get('air_landing_from', 0),
    '#required' => TRUE,
  );

  $form['air_landing_to'] = array(
    '#type' => 'textfield',
    '#title' => t('ID To'),
    '#size' => 60,
    '#maxlength' => 128,
    '#default_value' => variable_get('air_landing_to', 10000),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Add calendar entry when parse flights pages.
 */
function __parse_air_page() {
  __add_calendar_entry();
  return '!!';
}

/**
 * Function added calendar entry.
 */
function __add_calendar_entry() {

  AirLandingCalendar::init()->installCalendar();

  $from = variable_get('air_landing_from', 0);
  $to = variable_get('air_landing_to', 0);

  $helper = AirLandingCalendar::init();

  $date = $helper->getFirstEmptyDate($from, $to);


  if (!$date) {
    return FALSE;
  }

  if ($date->id >= $from && $date->id <= $to) {
    $hasFligts = $helper->hasFlights($date->did);
    $result = _air_get_combinations($date->code_from, $date->code_to, $date->month . '-15', $hasFligts);

    //dsm($result, '$result');

    $price = 0;

    if ($result) {
      if ($hasFligts) {
        $price = $result['price'];
      }
      else {
        $price = $result[0]['price'];
        _air_cache_flights_save($result, $date->did);
      }
    }
    _air_cache_date_save($price, $date->id);
  }
}
